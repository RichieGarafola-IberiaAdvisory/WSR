-- Drop tables in correct dependency order
IF OBJECT_ID('HoursTracking', 'U') IS NOT NULL DROP TABLE HoursTracking;
IF OBJECT_ID('WeeklyReports', 'U') IS NOT NULL DROP TABLE WeeklyReports;
IF OBJECT_ID('Workstreams', 'U') IS NOT NULL DROP TABLE Workstreams;
IF OBJECT_ID('Employees', 'U') IS NOT NULL DROP TABLE Employees;

-- ========================
-- Employees Table
-- ========================
CREATE TABLE Employees (
    EmployeeID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(255) NOT NULL,
    LaborCategory NVARCHAR(255) DEFAULT 'Unknown Role',
    VendorName NVARCHAR(255) DEFAULT 'Unknown Vendor',
    PublicID NVARCHAR(255) UNIQUE,
    UniqueKey NVARCHAR(255) UNIQUE,
    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system'
);

-- ========================
-- Workstreams Table
-- ========================
CREATE TABLE Workstreams (
    WorkstreamID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(255) NOT NULL,
    Description NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system'
);

-- Insert a default workstream
IF NOT EXISTS (
    SELECT 1 FROM Workstreams WHERE Name = 'Unassigned'
)
BEGIN
    INSERT INTO Workstreams (Name, Description, CreatedAt, EnteredBy)
    VALUES ('Unassigned', 'Default placeholder for uncategorized tasks', GETDATE(), 'system');
END;

-- ========================
-- WeeklyReports Table (Unified)
-- ========================
CREATE TABLE WeeklyReports (
    ReportID INT IDENTITY(1,1) PRIMARY KEY,
    EmployeeID INT NOT NULL,
    WorkstreamID INT NOT NULL,
    WeekStartDate DATE NOT NULL,
    DivisionCommand NVARCHAR(255),
    WorkProductTitle NVARCHAR(255) NOT NULL,
    ContributionDescription NVARCHAR(MAX), -- auto-populated from accomplishments
    Status NVARCHAR(100),
    PlannedOrUnplanned NVARCHAR(50),
    DateCompleted DATE,
    DistinctNFR NVARCHAR(255),
    DistinctCAP NVARCHAR(255),
    EffortPercentage DECIMAL(5,2),
    ContractorName NVARCHAR(255),
    GovtTAName NVARCHAR(255),

    -- Mandatory 5 accomplishment fields
    Accomplishment1 NVARCHAR(MAX) NOT NULL,
    Accomplishment2 NVARCHAR(MAX) NOT NULL,
    Accomplishment3 NVARCHAR(MAX) NOT NULL,
    Accomplishment4 NVARCHAR(MAX) NOT NULL,
    Accomplishment5 NVARCHAR(MAX) NOT NULL,

    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system',

    CONSTRAINT FK_WeeklyReports_Employees FOREIGN KEY (EmployeeID)
        REFERENCES Employees(EmployeeID) ON DELETE CASCADE,
    CONSTRAINT FK_WeeklyReports_Workstreams FOREIGN KEY (WorkstreamID)
        REFERENCES Workstreams(WorkstreamID) ON DELETE CASCADE
);

-- ========================
-- HoursTracking Table
-- ========================
CREATE TABLE HoursTracking (
    EntryID INT IDENTITY(1,1) PRIMARY KEY,
    EmployeeID INT NOT NULL,
    WorkstreamID INT NOT NULL,
    ReportingWeek DATE NOT NULL,
    HoursWorked DECIMAL(5,2) NOT NULL,
    LevelOfEffort DECIMAL(5,2),
    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system',

    CONSTRAINT FK_HoursTracking_Employees FOREIGN KEY (EmployeeID)
        REFERENCES Employees(EmployeeID),
    CONSTRAINT FK_HoursTracking_Workstreams FOREIGN KEY (WorkstreamID)
        REFERENCES Workstreams(WorkstreamID)
);


-- ========================
-- Roster Table (Auth + RBAC + Linked to Employees)
-- ========================
CREATE TABLE Roster (
    RosterID INT IDENTITY(1,1) PRIMARY KEY,
    EmployeeID INT NULL, -- Link to Employees
    Email NVARCHAR(255) NOT NULL UNIQUE,
    FirstName NVARCHAR(100),
    LastName NVARCHAR(100),
    Supervisor NVARCHAR(255),
    ProjectName NVARCHAR(255),
    LaborCategory NVARCHAR(255),
    Organization NVARCHAR(255),
    Role NVARCHAR(50) DEFAULT 'user', -- e.g., admin, user, viewer

    -- üîê Password storage (hash only)
    PasswordHash NVARCHAR(255) NOT NULL,

    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system',

    CONSTRAINT FK_Roster_Employees FOREIGN KEY (EmployeeID)
        REFERENCES Employees(EmployeeID) ON DELETE SET NULL
);


---

-- ========================
-- Documentation
-- ========================
-- This schema supports the Iberia Performance Tracker‚Äôs goals: 
-- unified weekly reporting, simplified data entry, and cleaner reporting.

1. Employees
Purpose: Central registry of personnel, normalized to prevent duplicates.

Key Fields:
- EmployeeID: Auto-incremented primary key.
- Name: Contractor full name (normalized).
- VendorName: Associated company/vendor.
- LaborCategory: Contractor role/title.
- PublicID: Human-readable identifier like GARAFOLA-RICHIE-042.
- UniqueKey: SHA-256 hash to prevent duplicates.

Why?
Ensures consistent, unique personnel tracking across reports.

2. Workstreams
Purpose: Defines work categories to align reports and accomplishments.

Key Fields:
- WorkstreamID: Primary key.
- Name: Label (e.g., ‚ÄúStrategy Ops‚Äù).
- Description: Optional context.

Why?
Supports grouping of reports and accomplishments by theme.

3. WeeklyReports (Unified)
Purpose: Tracks both structured weekly metrics and qualitative accomplishments.

Key Fields:
- EmployeeID ‚Üí Employees.
- WorkstreamID ‚Üí Workstreams.
- WeekStartDate, DivisionCommand, WorkProductTitle, Status, etc.
- Accomplishment1-5: Weekly qualitative contributions.
- ContributionDescription: Auto-populated summary from accomplishments.

Why?
Merges structured data with qualitative inputs for single-source reporting.
Removes need for a separate Accomplishments table.

4. HoursTracking
Purpose: Captures numeric labor effort for billing/auditing.

Key Fields:
- EmployeeID ‚Üí Employees.
- WorkstreamID ‚Üí Workstreams.
- ReportingWeek, HoursWorked, LevelOfEffort.

Why?
Supports detailed labor accounting while keeping WeeklyReports focused on deliverables and qualitative performance.


5. Roster
Purpose: Centralized personnel registry supporting authentication and role-based access control (RBAC).
Also links to the Employees table when identity resolution is possible.

Key Fields:
- RosterID: Internal unique ID for tracking.
- EmployeeID: Foreign key to Employees table (nullable to allow unmatched records).
- Email: Unique login identifier; used for authentication.
- FirstName, LastName: Human-readable names for matching and admin views.
- Supervisor: Associated supervisor or team lead.
- ProjectName: Contract or task order alignment.
- LaborCategory: Role or title within the project.
- Organization: Business unit or command affiliation.
- Role: User access level (e.g., 'admin', 'user', 'viewer').
- PasswordHash: SHA-256 hash of the user‚Äôs login password (never store plain-text passwords).
- CreatedAt: Timestamp when record was created.
- EnteredBy: Audit trail to track the data source or user that added the record.

Why?
- Enables secure email+password login for the Streamlit app.
- Enforces role-based access to sensitive views or actions (e.g., dashboards, admin tools).
- Cleanly separates authentication logic from reporting/timesheet data.
- Flexible structure prepares for future enhancements like multi-factor auth or SSO integration.

Usage:
- Used during Streamlit login to validate allowed users.
- Assigns RBAC-based access via the 'Role' field.
- Automatically linked to Employees table where identity matches (for unified analytics).

Notes:
- Emails must be unique for login integrity.
- EmployeeID linkage is optional and maintained via matching script or ETL logic.
- Designed for extensibility (additional auth fields, flags, audit trails).



Relational Integrity:
- One employee ‚Üí many weekly reports and hours.
- One workstream ‚Üí many weekly reports and hours.
- Referential integrity via foreign keys.
- Clean, normalized structure for easy analytics.


