-- Drop tables in correct dependency order
IF OBJECT_ID('HoursTracking', 'U') IS NOT NULL DROP TABLE HoursTracking;
IF OBJECT_ID('WeeklyReports', 'U') IS NOT NULL DROP TABLE WeeklyReports;
IF OBJECT_ID('Accomplishments', 'U') IS NOT NULL DROP TABLE Accomplishments;
IF OBJECT_ID('Workstreams', 'U') IS NOT NULL DROP TABLE Workstreams;
IF OBJECT_ID('Employees', 'U') IS NOT NULL DROP TABLE Employees;

-- ========================
-- Employees Table
-- ========================
CREATE TABLE Employees (
    EmployeeID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(255) NOT NULL,
    LaborCategory NVARCHAR(255) DEFAULT 'Unknown Role',
    VendorName NVARCHAR(255) DEFAULT 'Unknown Vendor',
    PublicID NVARCHAR(255) UNIQUE,
    UniqueKey NVARCHAR(255) UNIQUE,
    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system'
);

-- ========================
-- Workstreams Table
-- ========================
CREATE TABLE Workstreams (
    WorkstreamID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(255) NOT NULL,
    Description NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system'
);

-- ========================
-- Accomplishments Table
-- ========================
CREATE TABLE Accomplishments (
    AccomplishmentID INT IDENTITY(1,1) PRIMARY KEY,
    EmployeeID INT NOT NULL,
    WorkstreamID INT NULL,
    DateRange NVARCHAR(50),
    Description NVARCHAR(MAX) NOT NULL,
    -- Computed hash column for uniqueness
    DescriptionHash AS CONVERT(VARCHAR(64), HASHBYTES('SHA2_256', Description), 2) PERSISTED,
    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system',

    CONSTRAINT FK_Accomplishments_Employees FOREIGN KEY (EmployeeID)
        REFERENCES Employees(EmployeeID) ON DELETE CASCADE,
    CONSTRAINT FK_Accomplishments_Workstreams FOREIGN KEY (WorkstreamID)
        REFERENCES Workstreams(WorkstreamID) ON DELETE SET NULL
);

-- Add Unique Index to Prevent Duplicates (safe hash-based)
CREATE UNIQUE INDEX UQ_Accomplishments
ON Accomplishments(EmployeeID, WorkstreamID, DateRange, DescriptionHash);

-- ========================
-- Weekly Reports Table
-- ========================
CREATE TABLE WeeklyReports (
    ReportID INT IDENTITY(1,1) PRIMARY KEY,
    EmployeeID INT NOT NULL,
    WeekStartDate DATE NOT NULL,
    DivisionCommand NVARCHAR(255),
    WorkProductTitle NVARCHAR(255) NOT NULL,
    ContributionDescription NVARCHAR(MAX),
    Status NVARCHAR(100),
    PlannedOrUnplanned NVARCHAR(50),
    DateCompleted DATE,
    DistinctNFR NVARCHAR(255),
    DistinctCAP NVARCHAR(255),
    EffortPercentage DECIMAL(5,2),
    ContractorName NVARCHAR(255),
    GovtTAName NVARCHAR(255),
    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system',

    CONSTRAINT FK_WeeklyReports_Employees FOREIGN KEY (EmployeeID)
        REFERENCES Employees(EmployeeID) ON DELETE CASCADE
);


-- ========================
-- Hours Tracking Table
-- ========================
CREATE TABLE HoursTracking (
    EntryID INT IDENTITY(1,1) PRIMARY KEY,
    EmployeeID INT,
    WorkstreamID INT,
    ReportingWeek DATE,
    HoursWorked DECIMAL(5,2),
    LevelOfEffort DECIMAL(5,2),
    CreatedAt DATETIME DEFAULT GETDATE(),
    EnteredBy NVARCHAR(255) DEFAULT 'system',

    CONSTRAINT FK_HoursTracking_Employees FOREIGN KEY (EmployeeID)
        REFERENCES Employees(EmployeeID),
    CONSTRAINT FK_HoursTracking_Workstreams FOREIGN KEY (WorkstreamID)
        REFERENCES Workstreams(WorkstreamID));


---

This schema supports the Iberia Performance Tracker’s goals: clean data, efficient relationships, and extensibility for future reporting or analytics.

1. Employees
Purpose: Central registry of unique personnel (contractors/staff), normalized to prevent duplicates and preserve referential integrity across reports.

Key Fields:

EmployeeID: Auto-incremented primary key.

Name: Full name of the contractor (normalized via form input).

VendorName: Company/vendor the contractor is associated with (default: "Unknown Vendor").

LaborCategory: Role or title (default: "Unknown Role").

PublicID: Human-readable identifier like GARAFOLA-RICHIE-042.

UniqueKey: SHA-256 hash used to prevent duplicate employee entries across re-uploads.

Why?
Maintains a single source of truth for all personnel, ensuring consistency across reports and dashboards. Prevents duplicate records when data is reuploaded or inconsistently entered.

2. Workstreams
Purpose: Defines broader categories of work that accomplishments align to (e.g., major initiatives, focus areas).

Key Fields:

WorkstreamID: Primary key.

Name: Short label (e.g., “Strategy Ops”).

Description: Optional explanation of the workstream's scope or purpose.

Why?
Provides context for qualitative accomplishments, enabling grouped reporting on strategic themes or functional tracks.

3. Accomplishments
Purpose: Tracks weekly qualitative contributions, such as deliverables, milestones, or team impact narratives.

Key Fields:

AccomplishmentID: Primary key.

EmployeeID: Foreign key → Employees.EmployeeID.

WorkstreamID: Foreign key → Workstreams.WorkstreamID (nullable).

DateRange: Textual week indicator (e.g., 07/22/2025).

Description: One of up to 5 accomplishments submitted per week.

Why?
Enables qualitative performance tracking, separate from quantitative reports. Fully normalized and allows multiple entries per contractor per week. Prevents duplicate rows (same employee, week, workstream, and description)

4. WeeklyReports
Purpose: Captures structured, recurring activity and performance metrics for each employee, typically submitted weekly.

Key Fields:

ReportID: Primary key.

EmployeeID: Foreign key → Employees.EmployeeID.

WeekStartDate: Start of the reporting week.

DivisionCommand, WorkProductTitle, ContributionDescription: What was worked on and why.

Status: Progress of the work (e.g., "Complete", "In Progress").

PlannedOrUnplanned: Compliance with monthly planning.

DateCompleted, DistinctNFR, DistinctCAP: Optional metadata.

EffortPercentage: Derived from hours, estimates percent effort.

ContractorName, GovtTAName: Redundant for reporting traceability.

Why?
Facilitates structured weekly tracking of performance, enabling KPI dashboards, compliance checks, and performance analytics.

5. HoursTracking

Purpose:
Captures granular, numeric logging of time worked, useful for contracts that require billable hours, level-of-effort tracking, or external audit purposes.

Key Fields:

    EntryID: Auto-incremented primary key.

    EmployeeID: Foreign key → Employees.EmployeeID.

    WorkstreamID (optional): Foreign key → Workstreams.WorkstreamID, allows categorization by major work themes.

    ReportingWeek: Start date of the week the hours apply to (typically a Monday).

    HoursWorked: Exact number of hours logged by the contractor for that week (e.g., 38.5).

    LevelOfEffort: Calculated percentage of a standard 40-hour work week (e.g., 95.0 for 38/40).

Why?
Supports detailed labor accounting separate from qualitative narratives or accomplishments. This structure is ideal for contracts that require:

    Time-based billing

    Audit trails

    Performance analytics by workstream or individual

    Separation of raw effort metrics from qualitative deliverables

The normalized design avoids duplication and enforces referential integrity through foreign keys.


Relational Integrity & Normalization
One employee → many reports, accomplishments, and hour entries

One workstream → many accomplishments

No data duplication across employees or reports

Enforced with:

FOREIGN KEY constraints

ON DELETE CASCADE / SET NULL for graceful cleanup

Indexed EmployeeID, WeekStartDate, and UniqueKey for performance
________________________________________
